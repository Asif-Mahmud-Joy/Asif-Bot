// ‡¶è‡¶á ‡¶ï‡ßã‡¶°‡¶ü‡¶ø ‡¶™‡ßÅ‡¶∞‡¶®‡ßã join24 ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§
// ‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶¨‡ßú ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡¶≤‡ßã, ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ API ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü ‡¶®‡¶æ, ‡¶´‡¶≤‡ßá ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶æ‡ßü ‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶ö‡¶≤‡ßá‡•§
// ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® Helper ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶ï‡ßã‡¶°‡¶ï‡ßá ‡¶™‡¶∞‡¶ø‡¶∑‡ßç‡¶ï‡¶æ‡¶∞ ‡¶∞‡ßá‡¶ñ‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç 'reset' ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶®‡¶§‡ßÅ‡¶® ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§

const sleep = (ms) => new Promise((res) => setTimeout(res, ms));

// Helper ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®: ‡¶ï‡ßã‡¶°‡ßá‡¶∞ ‡¶™‡ßÅ‡¶®‡¶∞‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶ï‡¶Æ‡¶æ‡¶§‡ßá ‡¶è‡¶ü‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§
// ‡¶è‡¶ü‡¶ø ‡¶∏‡ßÅ‡¶®‡ßç‡¶¶‡¶∞‡¶≠‡¶æ‡¶¨‡ßá ‡¶™‡ßá‡¶ú ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßá, ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶™‡¶æ‡¶†‡¶æ‡ßü ‡¶è‡¶¨‡¶Ç onReply ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßá‡•§
async function displayPage(api, event, replyData) {
  const {
    groupList,
    page,
    pageSize,
    isSearch = false,
    author
  } = replyData;
  const totalPages = Math.ceil(groupList.length / pageSize);

  // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶®‡¶æ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü
  if (groupList.length === 0) {
    const message = isSearch ?
      "‡¶è‡¶á ‡¶®‡¶æ‡¶Æ‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§ üôÅ" :
      "‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶Ü‡¶õ‡¶ø ‡¶è‡¶Æ‡¶® ‡¶ï‡ßã‡¶®‡ßã ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§";
    return api.sendMessage(message, event.threadID, event.messageID);
  }

  // ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶™‡ßá‡¶ú‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶§‡ßà‡¶∞‡¶ø
  const start = (page - 1) * pageSize;
  const end = start + pageSize;
  const pageList = groupList.slice(start, end);

  const formattedList = pageList
    .map((g, i) => `${start + i + 1}. ${g.threadName}\n   - ID: ${g.threadID}`)
    .join("\n\n");

  const header = isSearch ? "üîé ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü:" : "ÁßÅ„ÅåÁÆ°ÁêÜËÄÖ„Åß„ÅÇ„Çã„Ç∞„É´„Éº„Éó„ÅÆ„É™„Çπ„Éà ü§ñ";
  const footerCmds = isSearch ?
    "reset - ‡¶™‡ßÅ‡¶∞‡ßã ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶¶‡ßá‡¶ñ‡¶§‡ßá\n[number] - ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶§‡ßá" :
    "search [‡¶®‡¶æ‡¶Æ] - ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡¶§‡ßá\n[number] - ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶§‡ßá";

  const msg =
    `${header}\n\n${formattedList}\n\n` +
    `‡¶™‡ßá‡¶ú ${page} ‡¶è‡¶∞ ${totalPages}\n` +
    `‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n` +
    `‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°:\n` +
    `next - ‡¶™‡¶∞‡ßá‡¶∞ ‡¶™‡ßá‡¶ú\n` +
    `prev - ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶™‡ßá‡¶ú\n` +
    `${footerCmds}`;

  const sentMessage = await api.sendMessage(msg, event.threadID, event.messageID);
  global.GoatBot.onReply.set(sentMessage.messageID, {
    commandName: "join24",
    messageID: sentMessage.messageID,
    author: author,
    originalGroupList: replyData.originalGroupList || groupList,
    currentGroupList: groupList,
    page: page,
    pageSize: pageSize,
  });
}

module.exports = {
  config: {
    name: "join24",
    version: "5.0", // ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶Ü‡¶™‡¶ó‡ßç‡¶∞‡ßá‡¶°‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶≠‡¶æ‡¶∞‡ßç‡¶∏‡¶® ‡¶Ü‡¶™‡¶°‡ßá‡¶ü
    author: "Asif Mahmud",
    cooldowns: 5,
    role: 2, // ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®‡¶∞‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá
    shortDescription: "Join groups where bot is admin",
    longDescription: "View and join other groups where the bot has admin access. Highly optimized version.",
    category: "system", // ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø‡¶§‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡¶≤‡ßã
    guide: {
      en: "{p}join24"
    },
  },

  onStart: async function ({ api, event }) {
    try {
      api.setMessageReaction("‚è≥", event.messageID, () => {}, true);

      const botID = api.getCurrentUserID();

      // *** ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶Ö‡¶™‡¶ü‡¶ø‡¶Æ‡¶æ‡¶á‡¶ú‡ßá‡¶∂‡¶®: getThreadList ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø adminIDs ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá ***
      // ‡¶è‡¶ü‡¶ø ‡¶∂‡¶§ ‡¶∂‡¶§ ‡¶Ö‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßÄ‡ßü API ‡¶ï‡¶≤ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡ßü‡•§
      const threads = await api.getThreadList(500, null, ["INBOX"]);
      const adminGroups = threads.filter(
        (t) =>
        t.isGroup &&
        t.threadID !== event.threadID &&
        t.adminIDs &&
        t.adminIDs.some((admin) => admin.id === botID)
      );

      api.setMessageReaction("‚úÖ", event.messageID, () => {}, true);

      await displayPage(api, event, {
        groupList: adminGroups,
        page: 1,
        pageSize: 5,
        author: event.senderID,
      });

    } catch (err) {
      console.error("Error in join24 onStart:", err);
      api.sendMessage("‚ùå ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶ü‡¶ø ‡¶§‡ßç‡¶∞‡ßÅ‡¶ü‡¶ø ‡¶ò‡¶ü‡ßá‡¶õ‡ßá‡•§", event.threadID);
    }
  },

  onReply: async function ({ api, event, Reply }) {
    if (event.senderID !== Reply.author) return;

    const input = event.body.trim().toLowerCase();
    let {
      originalGroupList,
      currentGroupList,
      page,
      pageSize
    } = Reply;
    let newPage = page;
    let newGroupList = currentGroupList;
    let isSearch = false;

    if (input === "next") {
      const totalPages = Math.ceil(currentGroupList.length / pageSize);
      newPage = page >= totalPages ? 1 : page + 1;
    } else if (input === "prev") {
      const totalPages = Math.ceil(currentGroupList.length / pageSize);
      newPage = page <= 1 ? totalPages : page - 1;
    } else if (input.startsWith("search ")) {
      const searchTerm = input.slice(7).trim();
      if (!searchTerm) {
        return api.sendMessage("‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®‡•§", event.threadID, event.messageID);
      }
      newGroupList = originalGroupList.filter((g) =>
        g.threadName.toLowerCase().includes(searchTerm)
      );
      newPage = 1;
      isSearch = true;
    } else if (input === "reset" || input === "all") {
      newGroupList = originalGroupList;
      newPage = 1;
    } else if (!isNaN(input) && Number(input) > 0) {
      const selectionIndex = parseInt(input, 10);
      const groupIndex = (page - 1) * pageSize + (selectionIndex - (page - 1) * pageSize) - 1;

      if (groupIndex >= 0 && groupIndex < currentGroupList.length) {
        const group = currentGroupList[groupIndex];
        try {
          await api.addUserToGroup(event.senderID, group.threadID);
          return api.sendMessage(`‚úÖ ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá "${group.threadName}" ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§`, event.threadID, event.messageID);
        } catch (err) {
          return api.sendMessage(
            `‚ùå "${group.threadName}" ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ø‡ßã‡¶ó ‡¶¶‡¶ø‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá‡•§ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨‡¶§ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶Ü‡¶õ‡ßá‡¶® ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶¨‡¶ü‡¶ü‡¶ø‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ ‡¶®‡ßá‡¶á‡•§`,
            event.threadID,
            event.messageID
          );
        }
      } else {
        return api.sendMessage("‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞‡•§ ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶•‡ßá‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶†‡¶ø‡¶ï ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®‡•§", event.threadID, event.messageID);
      }
    } else {
      // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶®‡¶æ ‡¶Æ‡ßá‡¶≤‡ßá, ‡¶§‡¶¨‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶á ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ‡•§
      return;
    }
    
    // ‡¶™‡ßÅ‡¶∞‡ßã‡¶®‡ßã ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡¶ü‡¶ø ‡¶Ü‡¶®‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
    api.unsendMessage(Reply.messageID).catch(err => console.log("Could not unsend message in join24 reply."));

    await displayPage(api, event, {
      groupList: newGroupList,
      page: newPage,
      pageSize: pageSize,
      isSearch: isSearch || (newGroupList.length !== originalGroupList.length), // ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶¨‡¶æ ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø
      author: event.senderID,
      originalGroupList: originalGroupList,
    });
  },
};
