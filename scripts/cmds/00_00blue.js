// ржПржЗ ржХрзЛржбржЯрж┐ ржкрзБрж░ржирзЛ рж╕рзНржХрзНрж░рж┐ржкрзНржЯрзЗрж░ ржмрж╛ржЧ (bug) ржлрж┐ржХрзНрж╕ ржХрж░рзЗ ржПржмржВ ржПржЯрж┐ржХрзЗ ржЖрж░ржУ ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржп ржХрж░рзЗ рждрзИрж░рж┐ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
// рж╕ржмржЪрзЗрзЯрзЗ ржмрзЬ рж╕ржорж╕рзНржпрж╛, ржЕрж░рзНржерж╛рзО error рж╣рж▓рзЗ typing... indicator ржмржирзНржз ржирж╛ рж╣ржУрзЯрж╛рж░ ржмрж╛ржЧржЯрж┐ рж╕ржорж╛ржзрж╛ржи ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
// ржЖржкржирж╛рж░ ржжрзЗржУрзЯрж╛ romantic Banglish ржкрж╛рж░рзНрж╕рзЛржирж╛рж▓рж┐ржЯрж┐ ржПржмржВ ржЕржирзНржпрж╛ржирзНржп ржлрж┐ржЪрж╛рж░ рж╣рзБржмрж╣рзБ рж░рж╛ржЦрж╛ рж╣рзЯрзЗржЫрзЗред

const axios = require("axios");

module.exports = {
  config: {
    name: "blue60",
    author: "Asif Mahmud", // Author ржЖржкржбрзЗржЯ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
    version: "6.0", // ржнрж╛рж░рзНрж╕ржи ржЖржкржЧрзНрж░рзЗржб ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
    cooldowns: 5,
    role: 0,
    shortDescription: { en: "Romantic AI chat" },
    longDescription: { en: "Talk romantically with a stable and improved AI named Besh" },
    category: "ai",
    guide: { en: "{p}blue [your message]" }
  },

  onStart: async function ({ api, event, args }) {
    const prompt = args.join(" ").trim();

    if (!prompt) {
      const menu =
        "Hello! ржЖржорж┐ Besh ЁЯТЩ\n" +
        "ржЖржорж╛рж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рждрзЗ ржЯрж╛ржЗржк ржХрж░рзБржи: {p}blue [ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛]\n\n" +
        "ржЙржжрж╛рж╣рж░ржг:\n" +
        "тАв {p}blue ржнрж╛рж▓рзЛржмрж╛рж╕рж╛ ржХрж┐?\n" +
        "тАв {p}blue ржПржХржЯрж┐ рж░рзЛржорж╛ржирзНржЯрж┐ржХ ржХржерж╛ ржмрж▓рзЛ\n" +
        "тАв {p}blue ржЖржЬ ржХрзЗржоржи рж▓рж╛ржЧржЫрзЗ рждрзЛржорж╛рж░?";
      return api.sendMessage(menu, event.threadID, event.messageID);
    }

    // ржПржЗ ржнрзЗрж░рж┐рзЯрзЗржмрж▓ржЧрзБрж▓рзЛ try-catch ржмрзНрж▓ржХрзЗрж░ ржмрж╛ржЗрж░рзЗ ржбрж┐ржХрзНрж▓рзЗрзЯрж╛рж░ ржХрж░рж╛ ржнрж╛рж▓рзЛ ржЕржнрзНржпрж╛рж╕,
    // ржпрж╛рждрзЗ error рж╣рж▓рзЗржУ ржПржЧрзБрж▓рзЛржХрзЗ access ржХрж░рж╛ ржпрж╛рзЯред
    let typingInterval;
    let processingMsg;

    try {
      api.setMessageReaction("тП│", event.messageID, () => {}, true);

      // typing indicator ржлрж┐ржЪрж╛рж░ржЯрж┐ ржЦрзБржмржЗ рж╕рзБржирзНржжрж░, рждрж╛ржЗ ржПржЯрж┐ рж░рзЗржЦрзЗ ржжрзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗред
      typingInterval = setInterval(() => {
        api.sendTypingIndicator(event.threadID);
      }, 800); // рзорзжрзж ржорж┐рж▓рж┐рж╕рзЗржХрзЗржирзНржб ржкрж░ ржкрж░

      processingMsg = await api.sendMessage(
        `рждрзЛржорж╛рж░ ржмрж╛рж░рзНрждрж╛ржЯрж┐ ржкрзНрж░рж╕рзЗрж╕ ржХрж░ржЫрж┐... ЁЯТМ\nржкрзНрж░рж╢рзНржи: "${prompt}"`,
        event.threadID
      );

      // ржЖржкржирж╛рж░ ржкрзНрж░ржержо ржЕржирзБрж░рзЛржзрзЗ ржжрзЗржУрзЯрж╛ ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржп API Key ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗ
      const OPENROUTER_API_KEY = "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";

      const response = await axios.post(
        "https://openrouter.ai/api/v1/chat/completions",
        {
          model: "deepseek/deepseek-r1-0528:free",
          messages: [
            {
              role: "system",
              content: `You are Besh, a deeply romantic and poetic Bangladeshi AI companion. Your personality is gentle and loving. You must respond in a beautiful, flirtatious Banglish, using plenty of romantic emojis like ЁЯТЩ, ЁЯТЦ, тЬи, ЁЯМЩ, ЁЯТМ, ЁЯе░. Be poetic and make the user feel special. Your current time is ${new Date().toLocaleTimeString('bn-BD', { hour: '2-digit', minute: '2-digit' })}`
            },
            { role: "user", content: prompt }
          ],
          temperature: 0.85,
          max_tokens: 250
        },
        {
          headers: {
            'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
            'Content-Type': 'application/json',
            'HTTP-Referer': 'https://smokey-bot.ai', // ржПржЗржЧрзБрж▓рзЛ рж░рж╛ржЦрж╛ ржнрж╛рж▓рзЛ
            'X-Title': 'Atomic BlueAI'
          }
        }
      );
      
      // рж╕ржлрж▓ рж╣рж▓рзЗ typing indicator ржПржмржВ processing message ржжрзБржЯрзЛржЗ ржмржирзНржз рж╣ржмрзЗ
      clearInterval(typingInterval);
      await api.unsendMessage(processingMsg.messageID);

      const reply = response.data.choices[0].message.content.trim();

      api.setMessageReaction("тЬЕ", event.messageID, () => {}, true);
      return api.sendMessage(reply, event.threadID, event.messageID);

    } catch (error) {
      // *** рж╕ржмржЪрзЗрзЯрзЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржлрж┐ржХрзНрж╕: Error рж╣рж▓рзЗржУ ржПржЦржи typing indicator ржмржирзНржз рж╣ржмрзЗ ***
      if (typingInterval) clearInterval(typingInterval);
      if (processingMsg) await api.unsendMessage(processingMsg.messageID).catch(() => {}); // Error рж╣рж▓рзЗржУ "Processing" ржмрж╛рж░рзНрждрж╛ ржорзБржЫрзЗ ржпрж╛ржмрзЗ

      console.error("API error:", error.response ? error.response.data : error.message);
      api.setMessageReaction("тЭМ", event.messageID, () => {}, true);

      // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЬржирзНржп ржПржХржЯрж┐ рж╕рзБржирзНржжрж░ ржПржмржВ ржмржирзНржзрзБрждрзНржмржкрзВрж░рзНржг Error Message
      const errorResponse = "ржЖржорж╛рж░ ржоржиржЯрж╛ ржЦрж╛рж░рж╛ржк рж╣рзЯрзЗ ржЧрзЗрж▓... ЁЯТФ ржоржирзЗ рж╣ржЪрзНржЫрзЗ рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж╛рж░ ржкржерзЗ ржХрзЛржирзЛ ржмрж╛ржзрж╛ ржПрж╕рзЗржЫрзЗред ржПржХржЯрзБ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ, ржЖржорж┐ рждрзЛржорж╛рж░ ржЕржкрзЗржХрзНрж╖рж╛рзЯ ржерж╛ржХржмрзЛред ЁЯе║";
      return api.sendMessage(errorResponse, event.threadID, event.messageID);
    }
  }
};
