// ржПржЗ ржХрзЛржбржЯрж┐ ржкрзБрж░ржирзЛ llma79 ржХржорж╛ржирзНржбржХрзЗ ржбрж╛рзЯржирж╛ржорж┐ржХ ржЯрж╛ржЗржкрж┐ржВ ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи ржПржмржВ ржЙржирзНржиржд error handling ржжрж┐рзЯрзЗ ржЖржкржЧрзНрж░рзЗржб ржХрж░рзЗржЫрзЗред
// ржПржЯрж┐ ржПржЦржи ржЖржЧрзЗрж░ ржЪрзЗрзЯрзЗ ржЕржирзЗржХ ржмрзЗрж╢рж┐ ржЗржЙржЬрж╛рж░-ржлрзНрж░рзЗржирзНржбрж▓рж┐ ржПржмржВ ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржпред
// ржпржжрж┐ржУ ржХржорж╛ржирзНржбрзЗрж░ ржирж╛ржо 'llma', ржПржЯрж┐ ржЖрж╕рж▓рзЗ DeepSeek ржоржбрзЗрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ, ржпрж╛ ржЦрзБржмржЗ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзАред

const axios = require('axios');

module.exports = {
  config: {
    name: "llma71",
    version: "6.0.0", // ржнрж╛рж░рзНрж╕ржи ржЖржкржЧрзНрж░рзЗржб
    author: "Asif Mahmud",
    cooldowns: 5,
    role: 0,
    category: "romance",
    shortDescription: {
      en: "Romantic AI chat with DeepSeek"
    },
    longDescription: {
      en: "Chat romantically with a stable and improved Banglish-speaking AI using DeepSeek model."
    },
    guide: {
      en: "{p}{n} [ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛] ЁЯТЦ\n(ржЖржкржирж┐ ржЕржирзНржп ржХрзЛржирзЛ ржорзЗрж╕рзЗржЬрзЗрж░ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрж┐рзЯрзЗржУ ржкрзНрж░рж╢рзНржи ржХрж░рждрзЗ ржкрж╛рж░рзЗржи)"
    }
  },

  onStart: async function({ api, event, args }) {
    const { threadID, messageID, messageReply } = event;

    let prompt = args.join(" ").trim();
    // рж░рж┐ржкрзНрж▓рж╛ржЗ ржорзЗрж╕рзЗржЬ рж╣рзНржпрж╛ржирзНржбрзЗрж▓ ржХрж░рж╛рж░ ржлрж┐ржЪрж╛рж░ржЯрж┐ ржЦрзБржмржЗ ржнрж╛рж▓рзЛ, рждрж╛ржЗ ржПржЯрж┐ рж░рзЗржЦрзЗ ржжрзЗржУрзЯрж╛ рж╣рзЯрзЗржЫрзЗред
    if (messageReply?.body) {
      prompt = `${messageReply.body}\n\n[ржЙржкрж░рзЗрж░ ржорзЗрж╕рзЗржЬрзЗрж░ ржЙрждрзНрждрж░рзЗ ржмрж▓рзЛ]: ${prompt}`.trim();
    }

    if (!prompt) {
      const msg =
        "ЁЯТЦ рж░рзЛржорж╛ржирзНржЯрж┐ржХ AI ржорзЗржирзБ ЁЯТЦ\n\n" +
        "ржЙржжрж╛рж╣рж░ржг:\n" +
        "тАв {p}{n} ржЖржорж╛ржХрзЗ ржПржХржЯрж┐ ржнрж╛рж▓рзЛржмрж╛рж╕рж╛рж░ ржХржмрж┐рждрж╛ рж╢рзЛржирж╛ржУ\n" +
        "тАв {p}{n} ржЖржорж┐ рждрзЛржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рж┐, ржПржЯрж┐ ржЖрж░ ржХрзАржнрж╛ржмрзЗ ржмрж▓рж╛ ржпрж╛рзЯ?\n\n" +
        "ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛ржЯрж┐ ржХржорж╛ржирзНржбрзЗрж░ ржкрж░рзЗ ржЯрж╛ржЗржк ржХрж░рзБржиред";
      return api.sendMessage(msg, threadID, messageID);
    }

    let typingInterval;
    try {
      // *** ржбрж╛рзЯржирж╛ржорж┐ржХ ржЯрж╛ржЗржкрж┐ржВ ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи рж╢рзБрж░рзБ ***
      // API ржерзЗржХрзЗ ржЙрждрзНрждрж░ ржирж╛ ржЖрж╕рж╛ ржкрж░рзНржпржирзНржд ржПржЯрж┐ ржЪрж▓рждрзЗ ржерж╛ржХржмрзЗред
      typingInterval = setInterval(() => {
        api.sendTypingIndicator(threadID);
      }, 500);

      // ржЖржкржирж╛рж░ рж╕рзНржЯрзНржпрж╛ржирзНржбрж╛рж░рзНржб ржПржмржВ ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржп API Key ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯрзЗржЫрзЗред
      const apiKey = "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";
      
      const response = await axios.post(
        "https://openrouter.ai/api/v1/chat/completions",
        {
          model: "deepseek/deepseek-r1-0528:free",
          messages: [{
            role: "system",
            content: "You are a deeply romantic and poetic Bangladeshi AI companion. Your personality is gentle and loving. You must respond in a beautiful, flirtatious Banglish, using plenty of romantic emojis like ЁЯТЩ, ЁЯТЦ, тЬи, ЁЯМЩ, ЁЯТМ, ЁЯе░. Be poetic and make the user feel special."
          }, {
            role: "user",
            content: prompt
          }],
          temperature: 0.9,
          max_tokens: 350
        }, {
          headers: {
            'Authorization': `Bearer ${apiKey}`,
            'Content-Type': 'application/json'
          },
          timeout: 30000 // рзйрзж рж╕рзЗржХрзЗржирзНржб ржкрж░ API ржирж┐ржЬрзЗ ржерзЗржХрзЗ ржмрж╛рждрж┐рж▓ рж╣ржмрзЗ
        }
      );
      
      // рж╕ржлрж▓ рж╣рж▓рзЗ ржЯрж╛ржЗржкрж┐ржВ ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи ржмржирзНржз ржХрж░рж╛ рж╣ржмрзЗ
      clearInterval(typingInterval);

      const aiReply = response.data?.choices?.[0]?.message?.content?.trim();

      if (!aiReply) {
        // ржпржжрж┐ API ржерзЗржХрзЗ ржХрзЛржирзЛ ржХрж╛рж░ржгрзЗ ржЦрж╛рж▓рж┐ ржЙрждрзНрждрж░ ржЖрж╕рзЗ
        throw new Error("API ржерзЗржХрзЗ ржХрзЛржирзЛ ржЙрждрзНрждрж░ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред");
      }

      return api.sendMessage(aiReply, threadID, messageID);

    } catch (error) {
      // *** Error рж╣рж▓рзЗржУ ржЯрж╛ржЗржкрж┐ржВ ржЕрзНржпрж╛ржирж┐ржорзЗрж╢ржи ржмржирзНржз ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ ***
      if (typingInterval) clearInterval(typingInterval);

      console.error("LLMA79 CMD Error:", error.response ? error.response.data : error.message);
      
      // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЬржирзНржп ржПржХржЯрж┐ рж╕рзБржирзНржжрж░ ржПржмржВ ржерж┐ржорзЗрж░ рж╕рж╛ржерзЗ ржорж╛ржирж╛ржирж╕ржЗ Error Message
      const errorMessage = "ржЖржорж╛рж░ ржоржиржЯрж╛ ржЦрж╛рж░рж╛ржк рж╣рзЯрзЗ ржЧрзЗрж▓... ЁЯТФ ржоржирзЗ рж╣ржЪрзНржЫрзЗ рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж╛рж░ ржкржерзЗ ржХрзЛржирзЛ ржмрж╛ржзрж╛ ржПрж╕рзЗржЫрзЗред ржПржХржЯрзБ ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЛ, ржЖржорж┐ рждрзЛржорж╛рж░ ржЕржкрзЗржХрзНрж╖рж╛рзЯ ржерж╛ржХржмрзЛред ЁЯе║";
      return api.sendMessage(errorMessage, threadID, messageID);
    }
  }
};
